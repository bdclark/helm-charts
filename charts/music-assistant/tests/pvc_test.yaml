suite: test pvc
templates:
  - pvc.yaml
tests:
  - it: should create PVC with default values
    set:
      persistence.enabled: true
    asserts:
      - isKind:
          of: PersistentVolumeClaim
      - equal:
          path: metadata.name
          value: RELEASE-NAME-music-assistant-data
      - equal:
          path: spec.accessModes[0]
          value: ReadWriteOnce
      - equal:
          path: spec.resources.requests.storage
          value: 2Gi

  - it: should NOT create PVC when disabled
    set:
      persistence.enabled: false
    asserts:
      - hasDocuments:
          count: 0

  - it: should NOT create PVC when using existing claim
    set:
      persistence.enabled: true
      persistence.existingClaim: my-existing-pvc
    asserts:
      - hasDocuments:
          count: 0

  - it: should use custom storage size
    set:
      persistence.enabled: true
      persistence.size: 10Gi
    asserts:
      - equal:
          path: spec.resources.requests.storage
          value: 10Gi

  - it: should use custom storage class
    set:
      persistence.enabled: true
      persistence.storageClass: fast-ssd
    asserts:
      - equal:
          path: spec.storageClassName
          value: fast-ssd

  - it: should use custom access modes
    set:
      persistence.enabled: true
      persistence.accessModes:
        - ReadWriteMany
        - ReadOnlyMany
    asserts:
      - equal:
          path: spec.accessModes[0]
          value: ReadWriteMany
      - equal:
          path: spec.accessModes[1]
          value: ReadOnlyMany

  - it: should apply custom annotations
    set:
      persistence.enabled: true
      persistence.annotations:
        backup.volume.io/backup-volumes: data
        custom.annotation: value
    asserts:
      - equal:
          path: metadata.annotations["backup.volume.io/backup-volumes"]
          value: data
      - equal:
          path: metadata.annotations["custom.annotation"]
          value: value

  - it: should include default labels only (custom labels not implemented)
    set:
      persistence.enabled: true
    asserts:
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: music-assistant
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: RELEASE-NAME

  - it: should include default labels
    set:
      persistence.enabled: true
    asserts:
      - equal:
          path: metadata.labels["app.kubernetes.io/name"]
          value: music-assistant
      - equal:
          path: metadata.labels["app.kubernetes.io/instance"]
          value: RELEASE-NAME
      - isSubset:
          path: metadata.labels
          content:
            helm.sh/chart: music-assistant-0.2.0
            app.kubernetes.io/version: "2.6.0"
            app.kubernetes.io/managed-by: Helm

  - it: should not have selector (not implemented)
    set:
      persistence.enabled: true
    asserts:
      - isNull:
          path: spec.selector

  - it: should handle empty storage class (use default)
    set:
      persistence.enabled: true
      persistence.storageClass: "-"
    asserts:
      - equal:
          path: spec.storageClassName
          value: ""

  - it: should handle null storage class (use cluster default)
    set:
      persistence.enabled: true
      persistence.storageClass: null
    asserts:
      - isNull:
          path: spec.storageClassName